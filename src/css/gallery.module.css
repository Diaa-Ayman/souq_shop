:root {
  --deg: 60deg;
  --z: 350px;
}

.down {
  animation: down forwards 3s;
}
.hBody {
  margin: 7rem auto;
  position: relative;
  width: 200px;
  height: 200px;
  transform-style: preserve-3d;
  animation: animate 30s linear infinite;
}

.hBody span {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  transform-origin: center;
  transform-style: preserve-3d;
  -webkit-box-reflect: below 0px
    linear-gradient(transparent, transparent, #0004);
}

/* These classes i did because i can't give a css variable to each one of them inline..  */
.sp1 {
  transform: rotateY(var(--deg)) translateZ(var(--z));
}
.sp2 {
  transform: rotateY(calc(2 * var(--deg))) translateZ(var(--z));
}

.sp3 {
  transform: rotateY(calc(3 * var(--deg))) translateZ(var(--z));
}
.sp4 {
  transform: rotateY(calc(4 * var(--deg))) translateZ(var(--z));
}
.sp5 {
  transform: rotateY(calc(5 * var(--deg))) translateZ(var(--z));
}
.sp6 {
  transform: rotateY(calc(6 * var(--deg))) translateZ(var(--z));
}

/**********/

.hBody img {
  margin-top: 2rem;
  height: 170px;
  width: 190px;
  object-fit: cover;
}

@keyframes animate {
  from {
    transform: perspective(2000px) rotateY(0deg);
  }
  to {
    transform: perspective(2000px) rotateY(360deg);
  }
}

@keyframes down {
  from {
    opacity: 0;
    transform: translateZ(100rem) scale(0);
  }
  to {
    opacity: 1;
    transform: translateZ(0) scale(1);
  }
}

@media screen and (max-width: 770px) {
  .down {
    transform: translateZ(-20rem);
  }
}
